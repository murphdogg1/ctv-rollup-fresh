"use strict";(()=>{var e={};e.id=890,e.ids=[890],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2615:e=>{e.exports=require("http")},8791:e=>{e.exports=require("https")},8621:e=>{e.exports=require("punycode")},6162:e=>{e.exports=require("stream")},7360:e=>{e.exports=require("url")},1568:e=>{e.exports=require("zlib")},2369:(e,a,t)=>{t.r(a),t.d(a,{originalPathname:()=>h,patchFetch:()=>C,requestAsyncStorage:()=>d,routeModule:()=>m,serverHooks:()=>f,staticGenerationAsyncStorage:()=>u});var n={};t.r(n),t.d(n,{POST:()=>g});var r=t(9303),o=t(8716),s=t(670),i=t(7070),c=t(7367),l=t.n(c),p=t(8990);async function g(e){try{console.log("Starting campaign ingestion...");let a=await e.formData(),t=a.get("file"),n=a.get("campaignName");if(console.log("Form data received:",{filename:t?.name,campaignName:n}),!t)return i.NextResponse.json({success:!1,error:"No file provided"},{status:400});if(!t.name.toLowerCase().endsWith(".csv"))return i.NextResponse.json({success:!1,error:"Only CSV files are allowed"},{status:400});let r=t.name.replace(/\.[^/.]+$/,"").replace(/[_-]/g," "),o=n||r;console.log("Campaign name generated:",o),console.log("Creating campaign in database...");let s=await p.k.createCampaign(o);console.log("Campaign created successfully:",s);let c=`virtual://${s.campaign_id}/${t.name}`;console.log("Stored path generated:",c),console.log("Creating upload record...");let g=await p.k.createCampaignUpload(s.campaign_id,t.name,c);console.log("Upload record created successfully:",g),console.log("Parsing CSV file...");let m=await t.text(),{data:d,errors:u}=l().parse(m,{header:!0,skipEmptyLines:!0,transformHeader:e=>e.trim().toLowerCase()});console.log("CSV parsed:",{rows:d.length,errors:u.length}),u.length>0&&console.warn("CSV parsing warnings:",u),console.log("Transforming CSV data...");let f=d.map(e=>({campaign_id:s.campaign_id,campaign_name_src:e["campaign name"]||null,content_title:e["content title"]||"",content_network_name:e["content network name"]||"",impression:parseInt(e.impression)||0,quartile100:parseInt(e.quartile100)||0}));return console.log("Content data transformed:",f.length,"rows"),console.log("Inserting content data into database..."),await p.k.insertContentData(f),console.log("Content data inserted successfully"),console.log("Campaign ingestion completed successfully"),i.NextResponse.json({success:!0,campaign:{id:s.campaign_id,name:s.campaign_name},upload:{filename:t.name,storedPath:c},content:{rowsProcessed:d.length,rowsInserted:f.length,errors:u.length}})}catch(a){console.error("Campaign ingestion failed:",a),console.error("Error stack:",a instanceof Error?a.stack:"No stack trace");let e=a instanceof Error?a.message:"Unknown error";return console.error("Detailed error message:",e),i.NextResponse.json({success:!1,error:`Campaign ingestion failed: ${e}`,details:a instanceof Error?a.stack:"No stack trace",debug:"Enhanced error handling active"},{status:500})}}let m=new r.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/campaigns/ingest/route",pathname:"/api/campaigns/ingest",filename:"route",bundlePath:"app/api/campaigns/ingest/route"},resolvedPagePath:"/Users/mattmurphy/ctv-rollup/src/app/api/campaigns/ingest/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:d,staticGenerationAsyncStorage:u,serverHooks:f}=m,h="/api/campaigns/ingest/route";function C(){return(0,s.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:u})}}};var a=require("../../../../webpack-runtime.js");a.C(e);var t=e=>a(a.s=e),n=a.X(0,[948,972,498,367,990],()=>t(2369));module.exports=n})();